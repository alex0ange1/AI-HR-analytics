services:
  postgres:
    image: postgres:17.4-alpine3.20
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - ./backend/.env
    user: ${POSTGRES_USER}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - local_network
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    depends_on:
      - postgres
    image: fastapi_app
    volumes:
      - ./backend/src:/backend/src
      - ./backend/migration:/backend/migration
    env_file:
      - ./backend/.env
    networks:
      - local_network
    ports:
      - '8000:8000'
    build:
      context: ./backend
      dockerfile: Dockerfile
    pull_policy: build
    entrypoint: sh -c "./src/start.sh"

  frontend:
    depends_on:
      - backend
    networks:
      - local_network
    ports:
      - '5173:5173'
    build:
      context: ./frontend/react_app
      dockerfile: Dockerfile
    volumes:
      - ./frontend/react_app:/frontend
      - /frontend/node_modules

networks:
  local_network:
    name: local_network
    driver: bridge
    ipam:
      config:
        - subnet: 192.16.0.0/16


volumes:
  db_data: